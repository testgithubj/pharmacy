loki:
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
    aws:
      region: ap-southeast-1
      bucketnames: development-demo-loki-chunks
      s3forcepathstyle: false
  ingester:
    chunk_encoding: snappy
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h # 28 days retention
  compactor:
    retention_enabled: true 
    delete_request_store: s3
  ruler:
    enable_api: true
    storage:
      type: s3
      s3:
        region: ap-southeast-1 # for example, eu-west-2
        bucketnames: development-demo-loki-ruler # Your actual S3 bucket name, for example, loki-aws-dev-ruler
        s3forcepathstyle: false
      alertmanager_url: http://prom:9093 # The URL of the Alertmanager to send alerts (Prometheus, Mimir, etc.)
  
  querier:
    max_concurrent: 4

  storage:
    type: s3
    bucketNames:
      chunks: development-demo-loki-chunks # Your actual S3 bucket name (loki-aws-dev-chunks)
      ruler: development-demo-loki-ruler # Your actual S3 bucket name (loki-aws-dev-ruler)
      admin: development-demo-loki-admin # Your actual S3 bucket name (loki-aws-dev-admin) - GEL customers only
    s3:
      region: ap-southeast-1 # eu-west-2
      #insecure: false
    # s3forcepathstyle: false

serviceAccount:
  create: true
  annotations:
    "eks.amazonaws.com/role-arn": "arn:aws:iam::738928894806:role/development-demo-loki-s3" # The service role you created

deploymentMode: Distributed

ingester:
  replicas: 3
  zoneAwareReplication:
    enabled: false
  persistence:
    enabled: true
    claims:
      - name: data
        size: 15Gi
        #   -- Storage class to be used.
        #   If defined, storageClassName: <storageClass>.
        #   If set to "-", storageClassName: "", which disables dynamic provisioning.
        #   If empty or set to null, no storageClassName spec is
        #   set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS, and OpenStack).
        storageClass: gp3
  resources: {} # -- Resource requests and limits

querier:
  replicas: 3
  maxUnavailable: 2
  resources: {} # -- Resource requests and limits

queryFrontend:
  replicas: 2
  maxUnavailable: 1
  resources: {} # -- Resource requests and limits

queryScheduler:
  replicas: 2
  resources: {} # -- Resource requests and limits

distributor:
  replicas: 3
  maxUnavailable: 2
  resources: {} # -- Resource requests and limits

compactor:
  replicas: 1
  resources: {} # -- Resource requests and limits
  persistence:
    enabled: true
    storageClass: gp3 # Choose the storageClass you wanna use
    size: 15Gi
    claims:
      - name: data
        size: 15Gi

indexGateway:
  replicas: 2
  maxUnavailable: 1
  resources: {} # -- Resource requests and limits
  persistence:
    enabled: true
    storageClass: gp3 # Choose the storageClass you wanna use
    size: 15Gi

        

ruler:
  replicas: 1
  maxUnavailable: 1
  resources: {} # -- Resource requests and limits
  persistence:
    # -- Enable creating PVCs which is required when using recording rules
    enabled: true
    # -- Size of persistent disk
    size: 15Gi
    storageClass: gp3 # Choose the storageClass you wanna use


# This exposes the Loki gateway so it can be written to and queried externaly
gateway:
  resources: {} # -- Resource requests and limits
  # service:
  #   type: LoadBalancer
  ingress:
    hosts:
      - host: gateway.loki.grabinsight.com
        paths:
          - path: /
            pathType: Prefix
    # -- Specifies whether an ingress for the gateway should be created
    enabled: true
    ingressClassName: ""

  basicAuth: 
    enabled: true
    existingSecret: loki-basic-auth
    # username: 'loki'
    # # -- The basic auth password for the gateway
    # password: '!ts@Comp1exPasWord'

# Since we are using basic auth, we need to pass the username and password to the canary
lokiCanary:
  extraArgs:
    - -pass=$(LOKI_PASS)
    - -user=$(LOKI_USER)
  extraEnv:
    - name: LOKI_PASS
      valueFrom:
        secretKeyRef:
          name: canary-basic-auth
          key: password
    - name: LOKI_USER
      valueFrom:
        secretKeyRef:
          name: canary-basic-auth
          key: username

chunksCache:
  persistence:
    enabled: true
    storageSize: 15G
    mountPath: /data
    storageClass: gp3  # AWS EBS gp3 for better performance

resultsCache:
  persistence:
    enabled: true
    storageSize: 15G
    mountPath: /data
    storageClass: gp3

# Enable minio for storage
minio:
  enabled: false

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0



    
# helm install loki grafana/loki \
# --values loki-to-use.yaml \
# --namespace loki \
# --version 6.36.1 \
# --create-namespace